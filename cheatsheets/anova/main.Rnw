\documentclass[final,9pt,fleqn]{beamer}
\input{BeamOptions.tex}
\usepackage{eso-pic}
\setlength{\paperwidth}{11in}
\setlength{\paperheight}{7in}
\setlength{\mathindent}{5pt}
\setbeamerfont{frametitle}{size=\Huge}
\setbeamertemplate{navigation symbols}{}
\setbeamertemplate{footline}{\hfill {\footnotesize \href{https://creativecommons.org/licenses/by-sa/4.0/}{CC BY-SA 4.0} $\circ$ Edward A. Roualdes $\circ$ \href{https://roualdes.us}{roualdes.us} $\circ$ version $0.0.1$ $\circ$ updated: \today} \hspace {0.1in} \vspace{0.1in}}
\begin{document}

<<setup, include=FALSE>>=
options(replace.assign=TRUE, width=50, digits=4)
opts_knit[["set"]](progress=FALSE)
suppressMessages(library(tidyverse))
suppressMessages(library(tibble))
suppressMessages(library(readr))
old <- theme_set(theme_bw(base_size=10))

hospital_path <- "/Users/ez/website/app/public/data/hospital.csv"
hospital <- suppressMessages(read_csv(hospital_path))

df <- with(hospital, tibble(Numerical=infection_risk, Factor=factor(region)))
@

\newcommand\AtPagemyUpperLeft[1]{\AtPageLowerLeft{%
    \put(\LenToUnit{0.81\paperwidth},\LenToUnit{0.925\paperheight}){#1}}}
\AddToShipoutPictureFG{
  \AtPagemyUpperLeft{{
      \href{http://dplyr.tidyverse.org}{\includegraphics[scale=0.2,keepaspectratio]{dplyr.png}}
      \hspace{0.025in}
      \href{http://ggplot2.tidyverse.org}{\includegraphics[scale=0.2,keepaspectratio]{ggplot.png}}
      \hspace{0.025in}
      \href{https://www.r-project.org/}{\includegraphics[scale=0.05,keepaspectratio]{Rlogo.png}}
      \hspace{0.025in}
      \href{https://www.csuchico.edu}{\raisebox{-0.1\height}{\includegraphics[scale=0.13]{chico_seal.eps}}}
}}
}%



\begin{frame}[fragile]
  \frametitle{ \underline{Analysis of Variance} :: {\Large \textbf{CHEAT SHEET}} }
  \hspace{0.1in}
  \begin{columns}

    \begin{column}{0.03\paperwidth}
    \end{column}

    \begin{column}{0.3\paperwidth}
      \begin{block}{{\huge Basics}}

        Are the means amongst the $k$ levels equal? \\
        \vspace{-0.1in}
        \begin{align*}
          H_0: \quad  & \mu_1 = \mu_2 = \mu_3 = \ldots = \mu_K \\
          H_1: \quad  & \text{at least one mean is different} \\
          \alpha = 0.01 &  \\
        \end{align*}
      \end{block}
      \vspace{-0.25in}
      Step $1$, plot the data!
      \vspace{-0.1in}


<< fig.width=2.5, fig.height=1.5, cache=TRUE >>=

ggplot(df, aes(Factor, Numerical)) +
    geom_jitter(width=0.1, colour="grey75") +
    stat_summary(fun.data="mean_cl_boot",
                 colour="cornflowerblue")
@

\vspace{-0.1in}
<<size="large",>>=
fit <- lm(Numerical ~ Factor, data=df)
print(anova(fit), signif=FALSE)

@
\vspace{-0.1in}

  \begin{block}{{\huge Assumptions}}

  \begin{enumerate}
  \item independent observations $y_{nk}$ for $n=1, \ldots, N$,
  \item within each group $k=1, \ldots, K$, data are normal, and
  \item the variability of each group is equal.
  \end{enumerate}

  \end{block}
\end{column}

\begin{column}{.03\paperwidth}
\end{column}

\begin{column}{0.3\paperwidth}

  \begin{block}{{\huge Intuition}}
    Generally, means will be different when the average square error amongst the groups is significantly larger than average square error within the groups.
  \end{block}


  <<echo=FALSE, fig.width=1.5, fig.height=1, fig.show="hold">>=
  df_equal <- tibble(Numerical=c(rnorm(35, 0.1), rnorm(35, 0.05), rnorm(35, 0.15)),
                     Factor=rep(c("A", "B", "C"), each=35))
  ggplot(df_equal, aes(Factor, Numerical)) +
      geom_jitter(width=0.1, colour="grey75") +
      stat_summary(fun.data="mean_cl_boot", colour="cornflowerblue", geom="point")

  df_unequal <- tibble(Numerical=c(rnorm(35, 10), rnorm(35, -2), rnorm(35, 5)),
               Factor=rep(c("X", "Y", "Z"), each=35))
  ggplot(df_unequal, aes(Factor, Numerical)) +
      geom_jitter(width=0.1, colour="grey75") +
      stat_summary(fun.data="mean_cl_boot", colour="cornflowerblue", geom="point")

  @
\vspace{-0.2in}

\begin{centering}
\[ F_{K-1, N-K} = \frac{\text{average square error amongst the groups}}{\text{average square error within the group}} \]
\end{centering}



\begin{block}{{\huge F distribution}}

  The $F$-distribution is a probability density function over non-negative numbers.  P-values are strictly calculated from the right tail.  Large $F$ statistics indicate evidence against the null hypothesis.

  <<echo=FALSE, fig.width=2.5, fig.height=1.5, fig.align="center">>=

  p <- ggplot(data.frame(x=c(0,4)), aes(x)) + stat_function(fun=function(x) df(x, 3, 109), n=1001) + labs(x="", y="")
  d <- ggplot_build(p)$data[[1]]
  p + geom_area(data=subset(d, x>2.714), aes(x=x, y=y), fill="black", colour="black") +
        theme(axis.text.y=element_blank(),
              axis.ticks=element_blank())

      @
\end{block}

\vspace{-0.2in}

\begin{block}{{\huge Details}}

  ANOVA decomposes observation $n$ into three pieces: the first group's mean $\alpha$, the offset $\beta_k$ for group $k$, and an error term $\epsilon_{nk}$.  Each $x_{nk}$ is a numerically encoded, binary variable that indicates when observation $n$ belongs to group $k$.
  \vspace{-0.15in}

  \[ y_{nk} = \alpha + \beta_1  x_{n1} + \ldots + \beta_{K-1} x_{n,K-1} + \epsilon_{nk}, \quad \epsilon_{nk} ~ \mathcal{N}(0, \sigma^2)\]
\end{block}

\end{column}

\begin{column}{0.03\paperwidth}
\end{column}

\begin{column}{0.25\paperwidth}

  \begin{block}{{\huge Coefficients}}
    The coefficients $\beta_k$ are group offsets relative to the first group: group $k$'s mean is equal to $\hat{\alpha} + \hat{\beta_k}$.
<<echo=FALSE>>=
beta <- matrix(coefficients(fit))
rownames(beta) <- c("alpha", paste0(rep("beta_", 3), sep=1:3))
beta
@
  \end{block}

  \begin{block}{{\huge Group Means}}
    The expected value of $y_{nk}$, $E(y_{nk}|x_{nk})$, is found by averaging over the observations within group $k$.  If observation $n=5$ belongs to group $k=3$ then

    \begin{align*}
      \hat{y}_{5,3} = E(y_{5,3}|x_{5,3} == 1) & = \hat{\alpha} + \hat{\beta_3} \\
                              & = \Sexpr{beta[1]} + \Sexpr{beta[4]} \\
                              & = \Sexpr{beta[1]+beta[3]} \\
    \end{align*}

    Notice $\hat{y}_{5,3}$ is exactly equal to group $3$'s mean.

<<>>=
df %>%
    group_by(Factor) %>%
    summarise(group_mean=mean(Numerical))
@

  \end{block}
\end{column}


\end{columns}
\end{frame}
\end{document}
